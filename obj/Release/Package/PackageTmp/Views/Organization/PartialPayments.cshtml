@model PPCP07302018.Models.Member.MakePayment
@using System.Web.Mvc.Html
@using Kendo.Mvc.UI
@using System.Web.Mvc
@{
    ViewBag.Title = "PartialPayments";
    Layout = "~/Views/Shared/WUCOrgLeftMenu.cshtml";
    var ServiceUrl = (System.Configuration.ConfigurationManager.AppSettings["ServiceUrl"].ToString());

}
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/modernizr")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/KendoScripts")
@Scripts.Render("~/bundles/custom-validator")
@Styles.Render("~/bundles/Kendocss")
@Styles.Render("~/bundles/Membercssfiles")    @*For member css files*@
@*@Scripts.Render("~/bundles/PartialPaymentsScriptFiles")*@

<style>
    .loadingSpinner {
        position: absolute;
        z-index: 1000;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        background: rgba( 255, 255, 255, .8 ) url('../../Images/loading-spinner-red.gif') 50% 50% no-repeat;
    }
</style>

@Html.Hidden("CardID")
@Html.Hidden("CVV1")
@Html.Hidden("TempValue")
@Html.Hidden("TextBoxTempValue")
@Html.Hidden("TempSelectRadio")
@Html.Hidden("stripeID")
@Html.Hidden("AcceptedByID")
@Html.Hidden("eConsultationId")
@Html.Hidden("IsMemberAcknowledge")
@Html.Hidden("hdnCkeboxClick")

<script type="text/javascript">
    $(document).ready(function () {
        var myModel =@Html.Raw(Json.Encode(@Model));
        var MemberPlanCode=myModel.Plan_Code;
        //GetStripeCardDetails('@ServiceUrl');

        GetPlanDetails(MemberPlanCode,'@ServiceUrl');
        //GetMemberDetails('@Session["OrganizationID"]',"0", '@ServiceUrl');

        

        $("#btnPaymentSubmit").click(function (e) {
            var PaymentValidator = $("#divCardDetailsValidation").kendoValidator().data("kendoValidator");
            debugger;
            if($("#hdnCkeboxClick").val()=="0"||$("#hdnCkeboxClick").val()==""){
                document.getElementById("spnAmonyError").innerHTML="Please check the check box";
                return false;
            }else document.getElementById("spnAmonyError").innerHTML="";
            if($("#TempSelectRadio").val()=="1" || $("#TempSelectRadio").val()==""){
                if (PaymentValidator.validate()){
                    e.preventDefault();
                    if($("#CardNumber").val()==""||$("#CardNumber").val()==null){
                        document.getElementById("spnCardNumber").innerHTML="This information is required";
                        return false;
                    }else document.getElementById("spnCardNumber").innerHTML="";
                    if($("#NameOnCard").val()==""||$("#NameOnCard").val()==null){
                        document.getElementById("spnNameOnCard").innerHTML="This information is required";
                        return false;
                    }else document.getElementById("spnNameOnCard").innerHTML="";
                    if($("#CVV").val()==""||$("#CVV").val()==null){
                        document.getElementById("spnCVV").innerHTML="This information is required";
                        return false;
                    }else document.getElementById("spnCVV").innerHTML="";

                    var CardNo=$("#CardID").val();
                    $("#CardID").val("");
                    Payment();
                }
                else {
                    return false;
                }
            }
            else{
                document.getElementById("spnCardNumber").innerHTML="";
                document.getElementById("spnNameOnCard").innerHTML="";
                document.getElementById("CVV").innerHTML="";
                var CardNo=$("#CardID").val();
                $("#CardID").val(CardNo);
                $("#CVV").val("");
                $("#CardNumber").val("");
                Payment();
            }
        });
    });
    function HidePopUp(){
        document.getElementById("divErrMessagePopup").style.display = "none";
    }
    function GetMemberDetails(OrganizationID, strMemberID, Url) {
        debugger;
        var webMethodName = "GetOrganizationMemberDetails";
        var ParameterNames = new Array();
        var ParameterValues = new Array();
        ParameterNames[0] = "OrganizationID";
        ParameterValues[0] = "0";//OrganizationID;
        ParameterNames[1] = "strMemberID";
        ParameterValues[1] = strMemberID;
        var Url = Url + "OrganizationServices";
        var jsonPostString = setJsonParameter(ParameterNames, ParameterValues, webMethodName);
        $.ajax({
            type: "POST",
            url: Url,
            data: jsonPostString,
            dataType: "text",
            contentType: "application/json",
            success: function (result) {
                debugger;
                var obj = jQuery.parseJSON(result);
                var PlansList = obj[0];
                document.getElementById("spnMemberPrimaryPhone").innerHTML = PlansList[0].MobileNumber;
                document.getElementById("spnMemberEmail").innerHTML = PlansList[0].Email;
                document.getElementById("spnStripeCustomerID").innerHTML = PlansList[0].StripeCustomerID;
                document.getElementById("spnMemberCountryCode").innerHTML = PlansList[0].CountryID;
                if(PlansList[0].StripeCustomerID==""||PlansList[0].StripeCustomerID==null){
                    $("#divbankdetails").show();
                }
                GetStripeCardDetails('@ServiceUrl',PlansList[0].StripeCustomerID);

            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
            },
        });
    }

    function GetEnrollMemberDetails(MemberPlanInstallmentID ,MemberPlanID ,PaymentAmount ,InstallmentAmount ,PaymentDate1 ,PaidAmount ,PaymentStatus ,PaymentDueDate ,PaymentDetailsID ){
        debugger;
        var amount="";
        var jsModel={};
        $("#hdnCkeboxClick").val(MemberPlanInstallmentID);
        jsModel.MemberPlanInstallmentID=MemberPlanInstallmentID;
        jsModel.MemberPlanID=MemberPlanID;
        jsModel.PaymentAmount=PaymentAmount;
        jsModel.InstallmentAmount=InstallmentAmount;
        jsModel.PaymentDate=PaymentDate1;
        jsModel.PaidAmount=PaidAmount;
        jsModel.PaymentStatus=PaymentStatus;
        jsModel.PaymentDueDate=PaymentDueDate;
        jsModel.PaymentDetailsID=PaymentDetailsID;

        $.ajax({
            cache: false,
            type: 'GET',
            url: "SavePaymentDeatilstemp",
            data: jsModel,
            dataType: "json",
            contentType: "application/json",
            success: function (data) {
                debugger;
                var amount=0;
                for(var r in data){
                    amount=amount+data[r].PaymentAmount+data[r].InstallmentAmount;
                }
                $("#AmountPaid").val(amount);
                // var obj = jQuery.parseJSON(data);
                // var TestsList = obj[0];
                //  $("#PaymentsGrid").data("kendoGrid").dataSource.data(TestsList);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                debugger;
            }
        });
    }
    function GetStripeCardDetails(ServiceUrl,StripeCustomerID) {
        debugger;
        var webMethodName = "GetStripCardDetails";
        var ParameterNames = new Array();
        var ParameterValues = new Array();
        ParameterNames[0] = "CustomerID";
        ParameterValues[0] = StripeCustomerID;
        var jsonPostString = setJsonParameter(ParameterNames, ParameterValues, webMethodName);
        var Url = '@ServiceUrl' + "Member";
        $.ajax({
            type: 'POST',
            url: Url,
            data: jsonPostString,
            dataType: "text",
            contentType: "application/json",
            success: function (data, textStatus, jqXHR) {
                var obj = jQuery.parseJSON(data);
                var TestsList = obj[0];
                if (TestsList.length != 0) {
                    $("#TempValue").val(2);
                    var jsonResult = "";
                    for (var r in TestsList) {
                        jsonResult += "<input type='radio' name='" + "CardsList" + "' value='" + TestsList[r].Id + "," + TestsList[r].Last4 + "," + TestsList[r].Name + "' onclick='" + "check(this.value)" + "'  />" + "&nbsp;" + TestsList[r].Brand + " **** **** **** " + TestsList[r].Last4 + "&nbsp;&nbsp;&nbsp;&nbsp;" + "<br />" +
                            "<label for='" + TestsList[r].Name + "'>" + TestsList[r].Name + "</label>" + "<br />" +
                            "<label for='" + TestsList[r].Name + "'>" + "Expires " + +TestsList[r].ExpirationMonth + "/" + TestsList[r].ExpirationYear + "</label>" + "<br />" +
                            //"<label for='" + TestsList[r].Name + "'>" + "Amount Charged ($) " + ConsultFee + "</label>" + "<br />" +
                            //"<input type='text' name='" + TestsList[r].Id + "' value='" + "" + "' id='" + TestsList[r].Id + "' style='display:none;width:100px' maxlength='" + 3 + "' placeholder='" + "Enter CVV" + "' onchange='" + "onChangeTest(this.value)" + "'/>"
                             "<br />"
                    }

                    jsonResult += "<input type='radio' name='" + "CardsList" + "' value='" + 0 + "' onclick='" + "check(this.value)" + "'  />" + "Add New Card " + " <br />";
                    $("#TextBoxTempValue").val(TestsList[r].Id);
                    document.getElementById("divCardSelect").style.display = "block";
                }
                else {
                    $("#TempValue").val(1);
                    document.getElementById("divCardSelect").style.display = "none";
                    document.getElementById("divbankdetails").style.display = "block";
                }
                $("#divCardList").html(jsonResult);
                if (TestsList.length != 0) {
                    check(TestsList[0].Id + "," + TestsList[0].Last4 + "," + TestsList[0].Name);
                    $("input[name=CardsList][value='" + TestsList[0].Id + "," + TestsList[0].Last4 + "," + TestsList[0].Name + "']").attr('checked', true);


                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
            }
        });
    }

    function check(CardsList) {
        document.getElementById("spnValidationMsg").innerText = "";
        //   document.getElementById("" + $("#TextBoxTempValue").val() + "").style.display = 'none';
        if (CardsList == 0) {
            document.getElementById("divbankdetails").style.display = "block";
            $("#TempSelectRadio").val("1");
            //$("#memberDetails_TempCardNumber").val("");
            //$("#memberDetails_TempNameOnCard").val("");
        }
        else {

            var arr = CardsList;
            var arr_val = arr.split(',');
            $("#CardID").val(arr_val[0]);

            // $("#memberDetails_TempCardNumber").val(arr_val[1]);
            // $("#memberDetails_TempNameOnCard").val(arr_val[2]);
            var CardValue = $("#CardID").val();
            $("#PaymentDetails_CardID").val(CardsList);

            $("#PaymentDetails_CustomerID").val('@Session["StripeCustomerID"]');
            // document.getElementById("" + CardsList + "").style.display = 'block';
            $("#TextBoxTempValue").val(CardsList);
            $("#TempSelectRadio").val("2");
            document.getElementById("divbankdetails").style.display = "none";
        }
    }
    function ValidateAmountPaid(AmountPaid)
    {
        if(AmountPaid=="")
        {
            document.getElementById("spnAmountPaid").innerHTML = "Please enter amount";return false;
        }
        else{
            var totalamount=document.getElementById("TotalAmount").innerText;
            if(totalamount==AmountPaid || totalamount>AmountPaid)
            {
                document.getElementById("spnAmountPaid").innerHTML ="";
            }
            else{
                document.getElementById("spnAmountPaid").innerHTML ="Please check your amount";return false;
            }
        }
    }
    function Payment(){
        debugger;
        var MemberRegistrationDetails =@Html.Raw(Json.Encode(@Model));
        MemberRegistrationDetails.MemberID=document.getElementById("spnMemberID").innerText;//'@Session["MemberID"]';
        MemberRegistrationDetails.MemberName=document.getElementById("spnMemberName").innerText;//'@Session["MemberName"]';
        MemberRegistrationDetails.MemberParentID= document.getElementById("spnMemberParentID").innerText ;//'@Session["MemberParentID"]';
        MemberRegistrationDetails.MobileNumber= document.getElementById("spnMemberPrimaryPhone").innerText ;//'@Session["MemberPrimaryPhone"]';
        MemberRegistrationDetails.CountryCode=document.getElementById("spnMemberCountryCode").innerText ; //'@Session["MemberCountryCode"]';
        MemberRegistrationDetails.MemberPlanCode=document.getElementById("spnPlan_code").innerText;
        MemberRegistrationDetails.TotalAmount=document.getElementById("lblPlanAmount").innerText;
        MemberRegistrationDetails.AmountPaid=$("#AmountPaid").val();
        MemberRegistrationDetails.PlanID=document.getElementById("spnPlanID").innerText;
        MemberRegistrationDetails.PlanName=document.getElementById("lblPlanName").innerText;
        MemberRegistrationDetails.Amount= document.getElementById("lbl_PaidAmount").innerText;
        MemberRegistrationDetails.Email=document.getElementById("spnMemberEmail").innerText;//"@Session["MemberEmail"]";
        MemberRegistrationDetails.StripeAccountID=document.getElementById("spnStripeAccountID").innerText;
        MemberRegistrationDetails.CommPPCP=document.getElementById("spnCommPPCP").innerText;
        MemberRegistrationDetails.CommPrimaryMember=document.getElementById("spnCommPrimaryMember").innerText;
        MemberRegistrationDetails.OrganizationID=document.getElementById("spnOrganizationID").innerText;
        MemberRegistrationDetails.ProviderName=document.getElementById("spnProviderName").innerText;
        MemberRegistrationDetails.OrganizationName=document.getElementById("spnOrganizationName").innerText;
        MemberRegistrationDetails.InstallmentAmount=document.getElementById("lblMonthlyFee").innerText;
        //if ($('#chkPayNow').is(":checked") == true) {
        if($("#TempSelectRadio").val()=="1" || $("#TempSelectRadio").val()==""){
            MemberRegistrationDetails.CardNumber=$("#CardNumber").val();
            MemberRegistrationDetails.NameOnCard=$("#NameOnCard").val();
            MemberRegistrationDetails.MM=$("#MM").val();
            MemberRegistrationDetails.YY=$("#YY").val();
            MemberRegistrationDetails.CVV=$("#CVV").val();
            MemberRegistrationDetails.CardID="";


        }else{
            MemberRegistrationDetails.CardID=$("#CardID").val();
            MemberRegistrationDetails.CardNumber="";
            MemberRegistrationDetails.NameOnCard="";
            MemberRegistrationDetails.MM="";
            MemberRegistrationDetails.YY="";
            MemberRegistrationDetails.CVV="";

        }
        //}
        MemberRegistrationDetails.StripeCustomerID=document.getElementById("spnStripeCustomerID").innerText;//'@Session["StripeCustomerID"]';
        if (MemberRegistrationDetails != null) {
            MakePlanPayment(MemberRegistrationDetails,'@ServiceUrl');
        }
        else{
            return false;
        }
    }
    ///Added by akhil
    function setParameter(parameterName, methodName) {
        var obj = new Object();
        obj.WebMethodName = methodName;
        obj.XMLdata = parameterName;
        var resultData = JSON.stringify(obj);
        return resultData;
    }
    function setJsonParameter(parameterName, parameterValue, methodName) {
        var obj = new Object();
        obj.ParameterName = parameterName;
        obj.ParameterValue = parameterValue;
        obj.WebMethodName = methodName;
        var resultData = JSON.stringify(obj);
        resultData = getformattedJsonFromArray(resultData);
        return resultData;
    }
    function getformattedJsonFromArray(arrayObj) {
        arrayObj = arrayObj.replace(/"/g, "'");
        return arrayObj + "";
    }


    function GetPlanDetails(MemberPlanCode, URl) {
        debugger;
        var webMethodName = "GetMemberPlanDetails";
        var ParameterNames = new Array();
        var ParameterValues = new Array();
        ParameterNames[0] = "strMemberPlanCode";
        ParameterValues[0] = MemberPlanCode;
        var Url = URl + "Member";
        var jsonPostString = setJsonParameter(ParameterNames, ParameterValues, webMethodName);
        $.ajax({
            type: "POST",
            url: Url,
            data: jsonPostString,
            dataType: "text",
            contentType: "application/json",
            success: function (result) {
                debugger;
                var obj = jQuery.parseJSON(result);
                var PlansList = obj[0];
                document.getElementById("spnOrganizationID").innerHTML = PlansList[0].OrganizationID;
                document.getElementById("spnOrganizationName").innerHTML = PlansList[0].OrganizationName;
                document.getElementById("spnProviderName").innerHTML = PlansList[0].ProviderName;
                document.getElementById("spnMemberID").innerHTML = PlansList[0].MemberID;
                document.getElementById("spnMemberParentID").innerHTML = PlansList[0].MemberID;
                document.getElementById("spnMemberParentID").innerHTML = PlansList[0].MemberParentID;
                document.getElementById("spnMemberName").innerHTML = PlansList[0].MemberName;
                document.getElementById("lblPlanName").innerHTML = PlansList[0].PlanName;
                if (PlansList.length > 1) {
                    document.getElementById("lbl_PlanType").innerHTML = "Family Plan";
                }
                else {
                    document.getElementById("lbl_PlanType").innerHTML = "Individual Plan";

                }

                document.getElementById("lblPlanTenure").innerHTML = PlansList[0].Duration;
                document.getElementById("lblPlanDescription").innerHTML = PlansList[0].PlanDescription;
                document.getElementById("lblFrequency").innerHTML = PlansList[0].Paymentschedule;
                document.getElementById("lblTerm").innerHTML = PlansList[0].NoofInstallments;
                document.getElementById("lblPlanStartDate").innerHTML = PlansList[0].PStartDate;
                document.getElementById("lbl_PlanEndDateValue").innerHTML = PlansList[0].PEndDate;
                document.getElementById("lblVisitFee").innerHTML = PlansList[0].VisitFee;
                document.getElementById("lblEnrollFee").innerHTML = PlansList[0].EnrollFee;
                document.getElementById("lblMonthlyFee").innerHTML = PlansList[0].InstallmentAmount;
                document.getElementById("lbl_NoOfAddMem").innerHTML = PlansList.length;
                document.getElementById("lblPlanAmount").innerHTML = PlansList[0].TotalAmount;
                document.getElementById("lblTransactionFee").innerHTML = PlansList[0].InstallmentFee;
                var Amount = document.getElementById("lblMonthlyFee").innerText;

                //$("#Amount").val(PlansList[0].AmountPaid);
                //debugger;

                //if (PlansList[0].AmountPaid == 0) {
                //    var TotalAmount = 0;
                //    try {
                //        var Amount = PlansList[0].InstallmentAmount;
                //        var InstalmentAmount = PlansList[0].InstallmentFee;
                //        TotalAmount = parseFloat(Amount) + parseFloat(InstalmentAmount);
                //    } catch (err) {

                //    }
                //    $("#AmountPaid").val(TotalAmount);
                //}
                //else {
                //    $("#AmountPaid").val(PlansList[0].InstallmentAmount);
                //}


                document.getElementById("lbl_PaidAmount").innerHTML = PlansList[0].AmountPaid;
                document.getElementById("lblPendingAmount").innerHTML = PlansList[0].DueAmount;
                document.getElementById("spnPlan_code").innerHTML = PlansList[0].Plan_Code;
                document.getElementById("spnPlanID").innerHTML = PlansList[0].PlanID;
                document.getElementById("spnStripeAccountID").innerHTML = PlansList[0].AccountID;
                document.getElementById("spnCommPPCP").innerHTML = PlansList[0].CommPPCP;
                document.getElementById("spnCommPrimaryMember").innerHTML = PlansList[0].CommPrimaryMember;
                $("#MemberPlans").data("kendoGrid").dataSource.data(PlansList);
                GetPaymentInstallmentDetails(PlansList[0].MemberPlanID, URl);
                GetMemberDetails('@Session["OrganizationID"]',PlansList[0].MemberID,URl);//PlansList[0].MemberID
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                console.log(XMLHttpRequest, textStatus, errorThrown);
            },
        });
    }
    function GetPaymentInstallmentDetails(MemberPlanID,ServiceUrl){
        debugger;
        var webMethodName = "GetMemberPlanInstallments";
        var ParameterNames = new Array();
        var ParameterValues = new Array();
        ParameterNames[0] = "MemberPlanID";
        ParameterValues[0] = MemberPlanID;
        var jsonPostString = setJsonParameter(ParameterNames, ParameterValues, webMethodName);
        var Url = ServiceUrl + "Member";
        $.ajax({
            type: 'POST',
            url: Url,
            data: jsonPostString,
            dataType: "text",
            contentType: "application/json",
            success: function (data, textStatus, jqXHR) {
                debugger;
                var obj = jQuery.parseJSON(data);
                var TestsList = obj[0];
                $("#PaymentsGrid").data("kendoGrid").dataSource.data(TestsList);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                debugger;
            }
        });
    }
    //To generate Payment xml in PlanDetails by Gayathri
    function MakePlanPayment(MemberRegistrationDetails, Url) {
        debugger;
        $.ajax({
            type: 'POST',
            cache: false,
            url: '/Organization/OrganizationMakePaymentxml',
            data: MemberRegistrationDetails,
            success: function (data, textStatus, jqXHR) {
                debugger;
                CallWebApiServiceforPayment(data, Url);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                debugger;
            },
        });
    }
    //To make Payment in PlanDetails by Gayathri
    function CallWebApiServiceforPayment(data, Url) {
        debugger;
        var webMethodName = "UpdateMemberPlanPayments";
        var ParameterName = data;
        var jsonPostString = setParameter(ParameterName, webMethodName);
        var Url = Url + "MemberXml";
        $("<div class='loadingSpinner'></div>").appendTo($("#divMain"));
        $.ajax({
            type: "POST",
            url: Url,
            data: jsonPostString,
            dataType: "json",
            contentType: "application/json",
            success: function (result) {
                var obj = result[0];
                $("#divMain").find(".loadingSpinner:first").remove();
                if (obj[0].ResultID != null && obj[0].TransactionID != null) {
                    if (obj[0].StripeCustomerID != null && obj[0].StripeCustomerID != "") {
                        SaveStripeCustomerID(obj[0].StripeCustomerID, obj[0].TransactionID);
                    }
                    else {

                        $("#divMakePayment").hide();
                        document.getElementById("divPaymentPopup").style.display = "block";
                        document.getElementById("spnPopupMessage").innerHTML = "Payment is successful. Your Transaction ID: " + obj[0].TransactionID;
                        document.getElementById("divPaymentPopup").scrollIntoView();

                    }
                }

                else {
                    // $("#divMakePayment").hide();
                    $("#divErrMessagePopup").show();
                    document.getElementById("spnPopupErrMessage").innerHTML = obj[0].result + ". Please try again.";
                    //document.getElementById("divErrMessagePopup").scrollIntoView();
                }

            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
            },
        });
    }
    function SaveStripeCustomerID(StripeCustomerID, TransactionID) {
        $.ajax({
            type: 'POST',
            cache: false,
            url: '/Member/SaveStripeCustomerID ',
            data: { StripeCustomerID: StripeCustomerID },
            success: function (data, textStatus, jqXHR) {
                $("#divMakePayment").hide();
                document.getElementById("divPaymentPopup").style.display = "block";
                document.getElementById("spnPopupMessage").innerHTML = "Payment is successful. Your Transaction ID: " + TransactionID;
                document.getElementById("divPaymentPopup").scrollIntoView();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
            },
        });
    }
</script>

<div class="pageheading_bar" align="center">
    <b>Payments</b>
</div>
<div class="Panel_bg" id="divMain">
    <div class="row Panel_bg_Sub">
        <div class="row">
            <div class="col-xs-12 col-md-12 col-sm-12 col-lg-12">
                @(Html.Kendo().Grid<PPCP07302018.Models.Member.MemberDetails>
                                                        ()
                                                        .Name("MemberPlans")
                                                        //.Events(e => e.DataBound("onPlansPaymentDataBound"))
                                                        .Columns(columns =>
                                                        {
                                                            columns.Bound(p => p.MemberName).Title("Member Name").Filterable(false).Width(150);
                                                            columns.Bound(p => p.OrganizationName).Title("Practice Name").Filterable(false).Width(150);
                                                            columns.Bound(p => p.ProviderName).Title("Provider Name").Filterable(false).Width(150);
                                                        })
                //.Scrollable()
                // .Pageable()
                // .Filterable()
                // .AutoBind(false)
                // .HtmlAttributes(new { })
                // .Selectable()
                // .DataSource(dataSource => dataSource
                // .Ajax()
                //// .PageSize(5)
                // .ServerOperation(false)
                // )
                )
            </div>
            <br />
            <br />

            <div class="col-xs-12 col-md-12 col-sm-12 col-lg-12">
                <div class="subheading_small_bg">
                    <span class="subheading_small">
                        <b>
                            <u>
                                Paying Plan Details
                            </u>
                        </b>
                    </span>
                </div>

                <table border="1" cellpadding="0" cellspacing="0">
                    <tr>
                        <td id="TdPlanName" style="width: 150Px">
                            Plan Name
                        </td>
                        <td style="width: 325Px">
                            <span ID="lblPlanName" Font-Bold="True"></span>
                        </td>
                        <td id="TdPlanType" style="width: 150Px">
                            Plan Type

                        </td>
                        <td style="width: 325Px">
                            <span ID="lbl_PlanType" Font-Bold="true"></span>
                        </td>
                    </tr>
                    <tr>
                        <td id="Td1">
                            Plan Duration

                        </td>
                        <td id="Td2">
                            <span ID="lblPlanTenure" Font-Bold="True"></span>
                        </td>
                        <td id="Td3">
                            Plan Description
                        </td>
                        <td id="Td4">
                            <span ID="lblPlanDescription" Font-Bold="True"></span>
                        </td>
                    </tr>
                    <tr>
                        <td id="Td5">
                            Payment Schedule

                        </td>
                        <td id="Td6">
                            <span ID="lblFrequency" Font-Bold="True"></span>
                        </td>
                        <td id="Td7">
                            Term(No.of Payment(s))
                        </td>
                        <td id="Td8">
                            <span ID="lblTerm" Font-Bold="True"></span>
                        </td>
                    </tr>
                    <tr>
                        <td id="Td9">
                            Plan Start Date

                            <br />

                        </td>
                        <td id="Td10">
                            <span ID="lblPlanStartDate" Font-Bold="True"></span>
                        </td>
                        <td>
                            Plan End Date
                            <br />

                        </td>
                        <td>
                            <span ID="lbl_PlanEndDateValue" Font-Bold="True"></span>
                        </td>
                    </tr>
                </table>
            </div>

            <div class="col-xs-12 col-md-12 col-sm-12 col-lg-12">
                <div class="subheading_small_bg">
                    <br />
                    <span class="subheading_small"><b><u>Plan Payment Summary</u></b></span>
                    <br />
                </div>
                <table border="1" cellpadding="0" cellspacing="0">
                    <tr>
                        <td id="Td15" style="width: 150Px">
                            Visit Fee

                        </td>
                        <td id="Td16" style="width: 200Px">
                            <span ID="lblVisitFee" Font-Bold="True"></span>
                        </td>
                        <td id="Td11" style="width: 150Px">
                            Enrollment Fee

                        </td>
                        <td id="Td12" style="width: 200Px">
                            <span ID="lblEnrollFee" Font-Bold="True"></span>
                        </td>
                    </tr>
                    <tr>
                        <td id="Td13">
                            Installment Amount

                        </td>
                        <td id="Td14">
                            <span ID="lblMonthlyFee" Font-Bold="True"></span>
                        </td>
                        <td>
                            Additional Member Installment Amount

                        </td>
                        <td>
                            <span ID="lbl_AddMemInstAmt" Font-Bold="true"></span>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Number of Additional members

                        </td>
                        <td>
                            <span ID="lbl_NoOfAddMem" Font-Bold="true"></span>
                        </td>
                        <td id="Td19" width="35%">
                            Plan Amount

                        </td>
                        <td id="Td20">
                            <span ID="lblPlanAmount" Font-Bold="True"></span>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Paid Amount

                        </td>
                        <td>
                            <span ID="lbl_PaidAmount" Font-Bold="true"></span>
                        </td>
                        <td id="Td19" width="35%">
                            DueAmount

                        </td>
                        <td id="Td20">
                            <span ID="lblPendingAmount" Font-Bold="True"></span>
                        </td>
                    </tr>
                    <tr>
                        <td id="Td17">
                            Installment Fee

                        </td>
                        <td id="Td18">
                            <span ID="lblTransactionFee" Font-Bold="True"></span>
                        </td>
                        <td id="Td21" width="35%">
                            Tax (%)

                        </td>
                        <td id="Td22">
                            <span ID="lblTaxPERC" Font-Bold="True"></span>
                            <span ID="lblTaxAmount" Font-Bold="True" style="display:none;"></span>
                            <span ID="spnPlan_code" Font-Bold="True" style="display:none;"></span>
                            <span ID="spnPlanID" Font-Bold="True" style="display:none;"></span>
                            <span ID="spnStripeAccountID" Font-Bold="True" style="display:none;"></span>
                            <span ID="spnMemberID" Font-Bold="True" style="display:none;"></span>
                            <span ID="spnMemberParentID" Font-Bold="True" style="display:none;"></span>
                            <span ID="spnMemberName" Font-Bold="True" style="display:none;"></span>
                            <span ID="spnMemberPrimaryPhone" Font-Bold="True" style="display:none;"></span>
                            <span ID="spnMemberCountryCode" Font-Bold="True" style="display:none;"></span>
                            <span ID="spnMemberEmail" Font-Bold="True" style="display:none;"></span>
                            <span ID="spnStripeCustomerID" Font-Bold="True" style="display:none;"></span>
                            <span id="spnCommPPCP" style="display:none;"></span>
                            <span id="spnCommPrimaryMember" style="display:none;"></span>
                            <span ID="spnOrganizationID" Font-Bold="True" style="display:none;"></span>
                            <span ID="spnProviderName" Font-Bold="True" style="display:none;"></span>
                            <span ID="spnOrganizationName" Font-Bold="True" style="display:none;"></span>
                        </td>
                    </tr>
                </table>
            </div>

            @*Added by akhil*@
            <div class="col-xs-12 col-md-12 col-sm-12 col-lg-12" style="width: 100%;">
                <div id="divGrid">
                    <br />
                    <span class="subheading_small"><b><u>Payment Grid</u></b></span>
                    <br />
                    <div class="form-group">
                        <div class="row">
                            <div class="col-xs-12 col-md-12 col-sm-12 col-lg-12">
                                @(Html.Kendo().Grid<PPCP07302018.Models.Member.MemberPlanInstallmentMapping>
                                                    ()
                                                    .Name("PaymentsGrid")
                                                    .Columns(columns =>
                                                    {
                                                        columns.Bound(p => p.MemberPlanInstallmentID).Title("Payment Amount").Filterable(false).Width(100).Visible(false);
                                                        columns.Bound(p => p.MemberPlanID).Title("Payment Amount").Filterable(false).Width(100).Visible(false);
                                                        columns.Bound(p => p).ClientTemplate("# if (PaymentStatus != 'Paid') { #" + "<a onclick=\"GetEnrollMemberDetails('#= MemberPlanInstallmentID #','#= MemberPlanID #','#= PaymentAmount #','#= InstallmentAmount #','#= PaymentDate1 #','#= PaidAmount #','#= PaymentStatus #','#= PaymentDueDate #','#= PaymentDetailsID #')\"> <span style='cursor:pointer'><input type='checkbox' value='#= InstallmentAmount #' id='check'></a>" + "# } else { #" + "<input type='checkbox' value='#= InstallmentAmount #' id='check' disabled='disabled'>" + "# } #").Title("Select").Width(50).Filterable(false);
                                                        columns.Bound(p => p.PaymentAmount).Title("Payment Amount").Filterable(false).Width(100);
                                                        columns.Bound(p => p.InstallmentAmount).Title("Installment Amount").Filterable(false).Width(100).HeaderHtmlAttributes(new { style = "overflow: visible; white-space: normal" });
                                                       // columns.Bound(p => p.PaymentDate).ClientTemplate("#= kendo.toString(kendo.parseDate(PaymentDate,'yyyy-MM-dd'), '" + "MM/dd/yyyy" + "') #").Title("Payment Date").Filterable(false).Width(100).HeaderHtmlAttributes(new { style = "overflow: visible; white-space: normal" });
                                                        columns.Bound(p => p.PaymentDate1).Title("Payment Date").Filterable(false).Width(100);
                                                       // columns.Bound(p => p.Paymentdate1).ClientTemplate("# if (PaymentDate != 'NULL') { #" + "#= kendo.toString(kendo.parseDate(PaymentDate,'yyyy-MM-dd'), '" + "MM/dd/yyyy" + "')#" + "# } #").Title("Payment Date1").Width(50).Filterable(false);
                                                        columns.Bound(p => p.PaidAmount).Title("Paid Amount").Filterable(false).Width(100).HeaderHtmlAttributes(new { style = "overflow: visible; white-space: normal" });
                                                        columns.Bound(p => p.PaymentStatus).Title("Payment Status").Filterable(false).Width(100).HeaderHtmlAttributes(new { style = "overflow: visible; white-space: normal" });
                                                        columns.Bound(p => p.PaymentDueDate).Title("Payment DueDate").ClientTemplate("#= kendo.toString(kendo.parseDate(PaymentDueDate,'yyyy-MM-dd'), '" + "MM/dd/yyyy" + "') #").Filterable(false).Width(100).HeaderHtmlAttributes(new { style = "overflow: visible; white-space: normal" });
                                                        columns.Bound(p => p.PaymentDetailsID).Title("Payment DetailsID").Filterable(false).Visible(false).Width(100).HeaderHtmlAttributes(new { style = "overflow: visible; white-space: normal" });

                                                    })
                                                    .Scrollable()
                                                    // .Pageable()
                                                    .Filterable()
                                                    .AutoBind(false)
                                                    .HtmlAttributes(new { })
                                                    .Selectable()
                                                    .DataSource(dataSource => dataSource
                                                    .Ajax()
                                                    .PageSize(12)
                                                    .ServerOperation(false)))
                            </div>
                            <span id="spnAmonyError" style="color:red"></span>
                        </div>
                    </div>
                </div>
            </div>
            @*End*@
            <div class="col-xs-12 col-md-12 col-sm-12 col-lg-12" style="width: 100%;">
                <div id="divMakePayment">
                    <br />
                    <span class="subheading_small"><b><u>Payment Details</u></b></span>
                    <br />


                    <div class="form-group">
                        <div class="row">
                            @*<div class="col-xs-12 col-md-12 col-sm-12 col-lg-12">
                                    @Html.CheckBox("chkPayNow", false)&nbsp;<b>PayNow</b>
                                </div>*@
                        </div>
                        <div class="col-xs-12 col-md-12 col-sm-12 col-lg-12 col-lg-push-1 col-md-push-1">
                            <div class="row">
                                <div class="col-xs-12 col-md-6 col-sm-6 col-lg-6">
                                    @Html.Label("Amount ", new { style = "font-weight:normal;", @class = "" })<span style="color: Red;"> * </span>
                                    @Html.TextBoxFor(model => model.AmountPaid, null, new { @readonly = "readonly", PlaceHolder = "", maxlength = 20, onchange = "ValidateAmountPaid(this.value);" })
                                    @Html.ValidationMessageFor(model => model.AmountPaid, "", new { @style = "color:red" })
                                </div>
                                <div class="col-xs-0 col-md-6 col-sm-6 col-lg-6 col-md-pull-2 col-lg-pull-2">
                                    <span id="spnAmountPaid" style="color:red"></span>
                                </div>
                            </div>
                            <div class="row" id="divCarddetails" style="display:block">
                                <div class="col-xs-12 col-sm-10 col-md-10 col-lg-10">
                                    <div class="col-xs-12 col-md-12 col-sm-12 col-lg-12" id="divCardSelect" style="display:none;width:100%;padding-left:0px">
                                        <fieldset id="fsCardDetails">
                                            <legend style="padding: 0px; border: 0px; color: #4088B3;font-weight: bold;font-size: medium;width:auto; margin-bottom:0px">Card Details</legend>
                                            <div id="divCardList"></div>
                                        </fieldset>
                                    </div>

                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-xs-12 col-md-12 col-sm-12 col-lg-12" id="divbankdetails" style="display:none">
                                                <fieldset id="fsBankdetails" class="divbackdrop" style="border: solid 1px #CCC; width:100%; background-color:white;">
                                                    <legend style="color: #4088B3; margin-bottom:0px; font-weight: bold; width:auto; font-size:17px">Card Details </legend>
                                                    <div id="divbank" style="width:90%;">
                                                        <div class="col-xs-12 col-md-12 col-sm-12 col-lg-12 col-lg-push-0">
                                                            <div class="form-group">
                                                                <div class="row">
                                                                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-12">
                                                                        <span style="font-weight:bold; font-size:14px">Payment Details (Please enter your card details below)</span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="form-group" id="divCardDetailsValidation">
                                                                <div class="row">
                                                                    <div class="col-xs-12 col-sm-6 col-md-3 col-lg-3">
                                                                        @Html.Label("Card Number", new { style = "font-weight:normal;", @class = "classlabel" })
                                                                        <span style="color: Red;">*</span>
                                                                        <br />
                                                                        @Html.TextBoxFor(model => model.CardNumber, null, new { PlaceHolder = "", style = "width:100%;", maxlength = 16 })
                                                                        <br />
                                                                        <span id="spnCardNumber" style="color:red"></span>
                                                                        @Html.ValidationMessageFor(model => model.CardNumber, "", new { @style = "color:red" })

                                                                    </div>
                                                                    <div class="col-xs-12 col-sm-6 col-md-3 col-lg-3">
                                                                        @Html.Label("Name On Card", new { style = "font-weight:normal;", @class = "classlabel" })
                                                                        <span style="color: Red;">*</span>
                                                                        <br />
                                                                        @Html.TextBoxFor(model => model.NameOnCard, null, new { PlaceHolder = "", style = "width:100%;", maxlength = 50 })
                                                                        <br />
                                                                        <span id="spnNameOnCard" style="color:red"></span>
                                                                        @Html.ValidationMessageFor(model => model.NameOnCard, "", new { @style = "color:red" })

                                                                    </div>
                                                                    <div class="col-xs-12 col-sm-6 col-md-4 col-lg-4">
                                                                        @Html.Label("Expiry Date (MM/YY)", new { style = "font-weight:normal;", @class = "labelColor" })<span style="color: Red;">*</span><br />
                                                                        @(Html.Kendo().DropDownListFor(m => m.MM)
                                                .Name("MM").HtmlAttributes(new { style = "width:30%;" })
                                                .HtmlAttributes(new { style = "width:30%;" })
                                                //.OptionLabel("--Select--")
                                                .DataTextField("Text")
                                                .DataValueField("Value")
                                                .Events(events =>
                                                {
                                                    events.Select("OnMonth");
                                                })
                                                .DataSource(source =>
                                                {
                                                    source.Read(read =>
                                                    {
                                                        read.Action("BindMonths", "Master");
                                                    });
                                                }))
                                                                        @(Html.Kendo().DropDownListFor(m => m.YY)
                                                .Name("YY").HtmlAttributes(new { style = "width:30%;" })
                                                .HtmlAttributes(new { style = "width:30%;" })
                                                //.OptionLabel("--Select--")
                                                .DataTextField("Text")
                                                .DataValueField("Value")
                                                .Events(events =>
                                                {
                                                    events.Select("OnYear");
                                                })
                                                .DataSource(source =>
                                                {
                                                    source.Read(read =>
                                                    {
                                                        read.Action("BindYears", "Master");
                                                    });
                                                }))
                                                                        @Html.Hidden("MM")
                                                                        @Html.Hidden("YY")
                                                                        @Html.HiddenFor(m => m.CardID)
                                                                        <script type="text/javascript">
                                                                        function OnMonth(e) {
                                                                            var dataItem = this.dataItem(e.item.index());
                                                                            $("#MM").val(dataItem.Text);
                                                                        }
                                                                        function OnYear(e) {
                                                                            var dataItem = this.dataItem(e.item.index());
                                                                            $("#YY").val(dataItem.Text);
                                                                        }
                                                                        </script>
                                                                    </div>
                                                                    <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2 col-lg-pull-1">
                                                                        @Html.Label("CVV", new { style = "font-weight:normal;", @class = "classlabel" })
                                                                        <span style="color: Red;">*</span>
                                                                        <br />
                                                                        @Html.TextBoxFor(model => model.CVV, null, new { PlaceHolder = "", style = "width:30%;", maxlength = 3 })
                                                                        <br />
                                                                        <span id="spnCVV" style="color:red"></span>
                                                                        @Html.ValidationMessageFor(model => model.CVV, "", new { @style = "color:red" })
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </fieldset>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div align="center">
                                <span id="spnValidationMsg" style="color: red; font-family: Verdana,Tahoma; font-size: 14px;
                                    font-weight: normal;">
                                </span>

                            </div>
                        </div>

                    </div>



                </div>
                <div class="row">
                    <div class="col-xs-12 col-md-12 col-sm-12" align="center">
                        <button class="button_blue" type="submit" id="btnPaymentSubmit" title="Submit" style="width: 100px;" value="Submit">
                            Submit
                        </button>
                        <button class="button_blue" type="button" id="btnPaymentCancel" title="Cancel" value="Cancel" style="width: 100px;" onclick="@("window.location.href='" + @Url.Action("ViewPaymentDetails", "Organization") + "'");">
                            Cancel
                        </button>
                    </div>
                </div>
                <br />
            </div>
        </div>
    </div>

    <div class="row" id="divPaymentPopup" style="display: none; align-content:center;">
        <div class="col-xs-12 col-md-12 col-sm-12 col-lg-12">
            <div class="Page_Dimmer">
            </div>
            <div class="PopupHolder" style="top:17%;">
                <div class="Bgheader" width="100%">
                    <div>
                        <span id="SpnPopUpTitle" style="color: White; font-family: Verdana,Tahoma;
                                font-size: 15px; font-weight: bold;">Physician Primary Care Plan</span>
                    </div>
                </div>
                <div style="border: Solid 1px #33CCEE; width: 100%;">
                    <div align="left">
                        <img alt="!" id="imgIcon" src="~/Images/Success.png"
                             style="height: 25px; width: 25px; border-width: 0px;" />
                    </div>
                    <div align="center">
                        <span id="spnPopupMessage" style="color: green; font-family: Verdana,Tahoma; font-size: 14px;
                                font-weight: bold;">
                        </span>
                    </div>
                    <div align="center">
                        <br />
                        <button type="button" id="btnSuccess" onclick="document.location.href = $('#loginUrl').attr('href');" class="button_blue"
                                style="width: 70px;">
                            Ok
                        </button>
                        <a id="loginUrl" href="@Html.AttributeEncode(Url.Action("ViewPaymentDetails", "Organization" ))">
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row" id="divErrMessagePopup" style="display: none; position: relative" align="center">
        <div class="col-xs-12 col-md-12 col-sm-12 col-lg-12">
            <div class="Page_Dimmer">
            </div>
            <div class="PopupHolder" style="top: 17%;">
                <div class="Bgheader" width="100%">
                    <div align="center">
                        <span id="SpanErrMsgTitle" style="color: White; font-family: Verdana,Tahoma; font-size: 15px;
                        font-weight: bold;">Physician Primary Care Plan</span>
                    </div>
                </div>
                <div style="border: Solid 1px #33CCEE; width: 100%;">
                    <div align="left">
                        <img alt="!" id="Img1" src="~/Images/Error.png" style="height: 25px; width: 25px;
                        border-width: 0px;" />
                    </div>
                    <div align="center">
                        <span id="spnPopupErrMessage" style="color: red; font-family: Verdana,Tahoma; font-size: 14px;
                                font-weight: bold;">
                        </span>
                    </div>
                    <div align="center">
                        <br />
                        <button type="button" id="btnErrPopup" onclick="HidePopUp();" class="button_blue"
                                style="width: 70px;">
                            Ok
                        </button>
                        @*<a id="errorUrl" href="@Html.AttributeEncode(Url.Action("PlanDetails", "Member" ))">
                            </a>*@
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
