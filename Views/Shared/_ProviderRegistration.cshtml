@model PPCP07302018.Models.Provider.AddDoctor
@using System.Web.Mvc.Html
@using Kendo.Mvc.UI
@using System.Web.Mvc

@{
    ViewBag.Title = "ProviderRegistration";
    Layout = "";
    var ServiceUrl = (System.Configuration.ConfigurationManager.AppSettings["ServiceUrl"].ToString());

}
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/modernizr")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/KendoScripts")
@Scripts.Render("~/bundles/custom-validator")
@Styles.Render("~/bundles/Kendocss")
@Scripts.Render("~/bundles/ProviderRegistrationScriptFiles")
@Styles.Render("~/bundles/Membercssfiles")


<div class="form-group">
    <div class="row">
        <div class="col-xs-12 col-md-12 col-sm-12 col-lg-12 ">

            <div class="row">

                <div class="col-xs-12 col-md-3 col-sm-6 col-lg-3">
                    @Html.Label("Last Name", new { style = "font-weight:normal;", @class = "" })<span style="color: Red;">*</span><br />
                    @Html.TextBoxFor(model => model.LastName, null, new { style = "width:100%;", maxlength = 50 })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @style = "color:red" })
                </div>
                <div class="col-xs-12 col-md-3 col-sm-6 col-lg-3">
                    @Html.Label("First Name", new { style = "font-weight:normal;", @class = "" })<span style="color: Red;">*</span><br />
                    @Html.TextBoxFor(model => model.FirstName, null, new { style = "width:100%;", maxlength = 50 })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @style = "color:red" })
                </div>

                <div class="col-xs-12 col-md-3 col-sm-6 col-lg-3">

                    @Html.Label("Salutation", new { style = "font-weight:normal;", @class = "classlabel" })<span style="color: Red;">*</span><br />

                    @(Html.Kendo().DropDownListFor(m => m.Salutation)
                                                    .Name("SalutationList").HtmlAttributes(new { style = "width:100%;" })
                                                    .OptionLabel("--Select--")
                                                    .Events(events =>
                                                    {
                                                        events.Change("onSelectSalutation");
                                                    })
                                                    .DataValueField("Value")
                                                    .DataTextField("Text")

                                                    .DataSource(source =>
                                                    {
                                                        source.Read(read =>
                                                        {
                                                        });
                                                    }))
                    <br />
                    @*@Html.ValidationMessageFor(model => model.Salutation)*@



                    <script type="text/javascript">
                        //Salutation change event to get SalutationID and Salutation
                        function onSelectSalutation(e) {
                            $("#SalutationId").val("");
                            //var dataItem = this.dataItem(e.item.index());
                            var dataItem = e.sender.dataItem();
                            $("#Salutation").val(dataItem.Text);
                            $("#SalutationId").val(dataItem.Value);


                        }
                    </script>

                </div>
                <div class="col-xs-12 col-md-3 col-sm-6 col-lg-3">

                    @Html.Label("Degree", new { style = "font-weight:normal;", @class = "classlabel" })<span style="color: Red;">*</span><br />

                    @(Html.Kendo().DropDownListFor(m => m.Degree)
                                                    .Name("Degree").HtmlAttributes(new { style = "width:100%;" })

                                                    .Events(events =>
                                                    {
                                                        events.Change("onSelectDegree");
                                                    })
                                                    .DataValueField("Value")
                                                    .DataTextField("Text")

                                                    .DataSource(source =>
                                                    {
                                                        source.Read(read =>
                                                        {
                                                        });
                                                    }))
                    <br />
                    @*@Html.ValidationMessageFor(model => model.Salutation)*@



                    <script type="text/javascript">
                        //Salutation change event to get SalutationID and Salutation
                        function onSelectDegree(e) {

                            //var dataItem = this.dataItem(e.item.index());
                            var dataItem = e.sender.dataItem();
                            $("#Degree").val(dataItem.Text);



                        }
                    </script>

                </div>




            </div>

            <div class="row">
                <div class="col-xs-12 col-md-3 col-sm-6 col-lg-3 ">
                    @Html.Label("Fax", new { style = "font-weight:normal;", @class = "" })<span style="color: Red;">*</span><br />
                    @Html.TextBoxFor(model => model.Fax, null, new { style = "width:100%;", maxlength = 10 })
                    @Html.ValidationMessageFor(model => model.Fax, "", new { @style = "color:red" })
                </div>
                <div class="col-xs-12 col-md-3 col-sm-6 col-lg-3 ">
                    @Html.Label("NPI Number", new { style = "font-weight:normal;", @class = "" })<span style="color: Red;">*</span><br />
                    @Html.TextBoxFor(model => model.NPI, null, new { style = "width:100%;", maxlength = 10 })
                    @Html.ValidationMessageFor(model => model.NPI, "", new { @style = "color:red" })
                </div>

                <div class="col-xs-12 col-md-3 col-sm-6 col-lg-3 ">
                    @Html.Label("Mobile Number", new { style = "font-weight:normal;", @class = "" })<span style="color: Red;">*</span><br />
                    @Html.TextBoxFor(model => model.CountryCode, null, new { style = "width:15%;", maxlength = 2 })
                    @Html.Label("-", new { style = "font-weight:normal;", @class = "labelColor" })
                    @Html.TextBoxFor(model => model.MobileNumber, null, new { style = "width:75%;", maxlength = 10 })
                    @Html.ValidationMessageFor(model => model.CountryCode, "", new { @style = "color:red" })
                    @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @style = "color:red" })
                </div>


                <div class="col-xs-12 col-md-3 col-sm-6 col-lg-3">
                    @Html.Label("Email", new { style = "font-weight:normal;", @class = "" })<span style="color: Red;">*</span><br />
                    @Html.TextBoxFor(model => model.Email, null, new { style = "width:100%;", maxlength = 50 })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @style = "color:red" })
                </div>
            </div>

            <div class="row">
                <div class="col-xs-12 col-md-3 col-sm-6 col-lg-3 ">
                    @Html.Label("Date of Birth", new { style = "font-weight:normal;", @class = "" })<span style="color: Red;">*</span><br />
                    @( Html.Kendo().DatePickerFor(model => model.DOB).Format("MM/dd/yyyy").Name("DOB").Value("").Max(DateTime.Today)
                                                    .HtmlAttributes(new { PlaceHolder = "MM/DD/YYYY", style = "width:100%;", Maxlength = "10", type = "text", onkeydown = "return true;" })
                                                    .Events(e => e.Change("DateSelectionChanged"))
                    )
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @style = "color:red" })
                </div>
                <div class="col-xs-12 col-md-3 col-sm-6 col-lg-3">
                    @Html.Label("Gender", new { style = "font-weight:normal;", @class = "" })<span style="color: Red;">*</span><br />
                    <label style="font-weight: normal;">
                        @(Html.RadioButton("Gender", 1, new
                    {
                        id = "rbtnGenderMale",
                        @onclick = "GenderValidation();"

                    }))
                        Male
                    </label>
                    <label style="font-weight: normal; margin-left:20px">
                        @(Html.RadioButton("Gender", 2, new
                    {
                        id = "rbtnGenderFemale",
                        @onclick = "GenderValidation();"
                    }))
                        Female
                    </label>
                    <br />
                    <div id="divGenderValidator" style="display:none">
                        <span id="GenderErrorMessage" style="color:red !important;"><span class="k-icon k-warning"> </span> This Information is Requried</span>
                    </div>
                </div>


                <div class="col-xs-12 col-md-3 col-sm-6 col-lg-3 ">

                    @Html.Label("Country", new { style = "font-weight:normal;", @class = "labelColor" })<span style="color: Red;">*</span><br />

                    @(Html.Kendo().DropDownListFor(model => model.CountryName)
                                                .Name("CountryName")
                                                .OptionLabel("--Select--")
                                                .HtmlAttributes(new { style = "width:100%;" })
                                                .DataValueField("CountryId")
                                                .DataTextField("CountryName")
                                                .Events(events =>
                                                {
                                                    events.Select("OnCountrySelectChange");
                                                })
                                                .DataSource(source =>
                                                {
                                                    source.Read(read =>
                                                    {
                                                    });
                                                }))
                    <br />
                    @Html.ValidationMessageFor(model => model.CountryName)
                    <script type="text/javascript">
                        //Country change event to get CountryName and CountryId
                        function OnCountrySelectChange(e) {
                            $("#CountryId").val("");
                            var dataItem = this.dataItem(e.item.index());
                            $("#CountryId").val(dataItem.CountryId);
                            var CountryID = $("#CountryId").val();
                            $("#CountryName").val(dataItem.CountryName);
                            $("#TempCountryName").val($("#CountryName").val());
                            BindStates(CountryID, "@ServiceUrl", "2");
                        }
                    </script>
                </div>
                <div class="col-xs-12 col-md-3 col-sm-6 col-lg-3">
                    @Html.Label("State", new { style = "font-weight:normal;", @class = "labelColor" })<span style="color: Red;">*</span><br />

                    @(Html.Kendo().DropDownListFor(m => m.StateName)
                                                .Name("StateName")
                                                .OptionLabel("--Select--")
                                                .HtmlAttributes(new { style = "width:100%;" })
                                                .DataValueField("StateID")
                                                .DataTextField("StateName")
                                                .Events(events =>
                                                {
                                                    events.Select("OnStateSelectChange");
                                                })
                                                .DataSource(source =>
                                                {
                                                    source.Read(read =>
                                                    {
                                                    });
                                                }))
                    <br />
                    @Html.ValidationMessageFor(m => m.StateName)

                    <script type="text/javascript">
                        //Country State event to get StateName and StateID
                        function OnStateSelectChange(e) {
                            $("#StateID").val("");
                            var dataItem = this.dataItem(e.item.index());
                            $("#StateName").val(dataItem.StateName);
                            $("#StateID").val(dataItem.StateID);
                            var StateID = $("#StateID").val();
                            $("#TempStateName").val($("#StateName").val());
                            BindCities(StateID, "@ServiceUrl", "2");
                        }
                    </script>
                </div>

            </div>

            <div class="row">




                <div class="col-xs-12 col-md-3 col-sm-6 col-lg-3 ">
                    @Html.Label("City", new { style = "font-weight:normal;", @class = "labelColor" })<span style="color: Red;">*</span><br />

                    @(Html.Kendo().DropDownListFor(m => m.CityName)
                                                .Name("CityName")
                                                .OptionLabel("--Select--")
                                                .HtmlAttributes(new { style = "width:100%;" })
                                                .DataValueField("CityID")
                                                .DataTextField("CityName")
                                                .Events(events =>
                                                {
                                                    events.Select("OnCitySelectChange");
                                                })
                                                .DataSource(source =>
                                                {
                                                    source.Read(read =>
                                                    {
                                                    });
                                                }))
                    <br />
                    @Html.ValidationMessageFor(m => m.CityName)

                    <script type="text/javascript">
                        //City change event to get CityName and CityID
                        function OnCitySelectChange(e) {
                            $("#CityId").val("");
                            var dataItem = this.dataItem(e.item.index());
                            $("#CityName").val(dataItem.CityName);
                            $("#CityId").val(dataItem.CityID);
                            $("#TempCityName").val(dataItem.CityName);
                        }
                    </script>
                </div>

                <div class="col-xs-12 col-md-3 col-sm-6 col-lg-3">
                    @Html.Label("Address", new { style = "font-weight:normal;", @class = "classlabel" })<span style="color: Red;">*</span><br />
                    @Html.TextAreaFor(m => m.Address, new { style = "width:100%;Height:25px", maxlength = "150" })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @style = "color:red" })
                    <br />
                </div>
                <div class="col-xs-12 col-md-3 col-sm-6 col-lg-3">
                    @Html.Label("ZIP / Postal Code", new { style = "font-weight:normal;", @class = "classlabel" })<span style="color: Red;">*</span><br />
                    @Html.TextBoxFor(m => m.Zip, new { style = "width:50%;Height:25px", maxlength = "5" })-
                    @Html.TextBoxFor(m => m.ZipCode, new { style = "width:40%;Height:25px", maxlength = "4" })
                    <br />
                    <span style="font-weight:normal;">5-digit ZIP</span>&nbsp;&nbsp;&nbsp;&nbsp;
                    <span style="font-weight:normal;"> 4-digit ZIP </span><br />
                    @Html.ValidationMessageFor(m => m.Zip)
                    @Html.ValidationMessageFor(m => m.ZipCode)
                </div>

            </div>


            <div class="row">
                @Html.Label("Specialization", new { style = "font-weight:normal;", @class = "" })<span style="color: Red;">*</span><br />
                <div class="col-xs-12 col-md-3 col-sm-6 col-lg-3" id="divSpecializationList"></div>
                <div class="col-xs-12 col-md-3 col-sm-6 col-lg-3 " id="divSpecializationListRight"></div>
            </div>
            <div id="divSpecializationValidator" style="display:none">
                <span style="color:red !important;" id="SpecitizationName_validationMessage"><span class="k-icon k-warning"> </span> This Information is Requried</span>
            </div>
        </div>

    </div>
</div>

